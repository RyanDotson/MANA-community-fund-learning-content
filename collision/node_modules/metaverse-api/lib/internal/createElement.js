"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const stack = [];
function createElement(nodeName, attributes, ...rest) {
    let children = [];
    let lastSimple = false;
    let child;
    let simple = false;
    let i;
    // tslint:disable-next-line:space-within-parens
    for (i = arguments.length; i-- > 2;) {
        stack.push(arguments[i]);
    }
    if (attributes && attributes.children != null) {
        if (!stack.length)
            stack.push(attributes.children);
        delete attributes.children;
    }
    while (stack.length) {
        // tslint:disable-next-line:no-conditional-assignment
        if ((child = stack.pop()) && child.pop !== undefined) {
            // tslint:disable-next-line:space-within-parens
            for (i = child.length; i--;)
                stack.push(child[i]);
        }
        else {
            if (typeof child === 'boolean')
                child = null;
            // tslint:disable-next-line:no-conditional-assignment
            if ((simple = typeof nodeName !== 'function')) {
                if (child == null)
                    child = null;
                else if (typeof child !== 'string')
                    simple = false;
            }
            if (simple && lastSimple) {
                children[children.length - 1] += child;
            }
            else if (child) {
                children.push(child);
            }
            lastSimple = simple;
        }
    }
    return {
        tag: nodeName,
        attrs: attributes || {},
        children: children || []
    };
}
exports.createElement = createElement;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlRWxlbWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbnRlcm5hbC9jcmVhdGVFbGVtZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBR0EsTUFBTSxLQUFLLEdBQVUsRUFBRSxDQUFBO0FBMER2Qix1QkFBOEIsUUFBMkIsRUFBRSxVQUFlLEVBQUUsR0FBRyxJQUFXO0lBQ3hGLElBQUksUUFBUSxHQUFzQixFQUFFLENBQUE7SUFDcEMsSUFBSSxVQUFVLEdBQVksS0FBSyxDQUFBO0lBQy9CLElBQUksS0FBSyxDQUFBO0lBQ1QsSUFBSSxNQUFNLEdBQVksS0FBSyxDQUFBO0lBQzNCLElBQUksQ0FBQyxDQUFBO0lBQ0wsK0NBQStDO0lBQy9DLEtBQUssQ0FBQyxHQUFHLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxHQUFJO1FBQ3BDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7S0FDekI7SUFDRCxJQUFJLFVBQVUsSUFBSSxVQUFVLENBQUMsUUFBUSxJQUFJLElBQUksRUFBRTtRQUM3QyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU07WUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQTtRQUNsRCxPQUFPLFVBQVUsQ0FBQyxRQUFRLENBQUE7S0FDM0I7SUFDRCxPQUFPLEtBQUssQ0FBQyxNQUFNLEVBQUU7UUFDbkIscURBQXFEO1FBQ3JELElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksS0FBSyxDQUFDLEdBQUcsS0FBSyxTQUFTLEVBQUU7WUFDcEQsK0NBQStDO1lBQy9DLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFO2dCQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7U0FDbkQ7YUFBTTtZQUNMLElBQUksT0FBTyxLQUFLLEtBQUssU0FBUztnQkFBRSxLQUFLLEdBQUcsSUFBSSxDQUFBO1lBRTVDLHFEQUFxRDtZQUNyRCxJQUFJLENBQUMsTUFBTSxHQUFHLE9BQU8sUUFBUSxLQUFLLFVBQVUsQ0FBQyxFQUFFO2dCQUM3QyxJQUFJLEtBQUssSUFBSSxJQUFJO29CQUFFLEtBQUssR0FBRyxJQUFJLENBQUE7cUJBQzFCLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUTtvQkFBRSxNQUFNLEdBQUcsS0FBSyxDQUFBO2FBQ25EO1lBRUQsSUFBSSxNQUFNLElBQUksVUFBVSxFQUFFO2dCQUN4QixRQUFRLENBQUMsUUFBUSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsSUFBSSxLQUFLLENBQUE7YUFDdkM7aUJBQU0sSUFBSSxLQUFLLEVBQUU7Z0JBQ2hCLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUE7YUFDckI7WUFFRCxVQUFVLEdBQUcsTUFBTSxDQUFBO1NBQ3BCO0tBQ0Y7SUFFRCxPQUFPO1FBQ0wsR0FBRyxFQUFFLFFBQVE7UUFDYixLQUFLLEVBQUUsVUFBVSxJQUFJLEVBQUU7UUFDdkIsUUFBUSxFQUFFLFFBQVEsSUFBSSxFQUFFO0tBQ3pCLENBQUE7QUFDSCxDQUFDO0FBM0NELHNDQTJDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNjcmlwdGFibGVTY2VuZSB9IGZyb20gJy4uL1NjcmlwdGFibGVTY2VuZSdcbmltcG9ydCB7IElTaW1wbGlmaWVkTm9kZSB9IGZyb20gJy4uL2ludGVyZmFjZXMnXG5cbmNvbnN0IHN0YWNrOiBhbnlbXSA9IFtdXG5cbmV4cG9ydCB0eXBlIENvbXBvbmVudENoaWxkID0gSlNYLkVsZW1lbnRcbmV4cG9ydCB0eXBlIENvbXBvbmVudENoaWxkcmVuID0gQ29tcG9uZW50Q2hpbGRbXVxuXG5leHBvcnQgdHlwZSBDb21wb25lbnRGYWN0b3J5PFA+ID0gQ29tcG9uZW50Q29uc3RydWN0b3I8UD4gfCBGdW5jdGlvbmFsQ29tcG9uZW50PFA+XG5cbmV4cG9ydCB0eXBlIFJlbmRlcmFibGVQcm9wczxQPiA9IFJlYWRvbmx5PFA+ICYgUmVhZG9ubHk8eyBjaGlsZHJlbj86IENvbXBvbmVudENoaWxkcmVuIH0+XG5cbmV4cG9ydCBpbnRlcmZhY2UgRnVuY3Rpb25hbENvbXBvbmVudDxQcm9wcyA9IHt9PiB7XG4gIChwcm9wczogUmVuZGVyYWJsZVByb3BzPFByb3BzPiwgY29udGV4dD86IGFueSk6IElTaW1wbGlmaWVkTm9kZSB8IG51bGxcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDb21wb25lbnRDb25zdHJ1Y3RvcjxQcm9wcyA9IHt9LCBTdGF0ZSA9IHt9PiB7XG4gIG5ldyAocHJvcHM6IFByb3BzLCBjb250ZXh0PzogYW55KTogU2NyaXB0YWJsZVNjZW5lPFByb3BzLCBTdGF0ZT5cbn1cblxuLyoqXG4gKiBKU1gvaHlwZXJzY3JpcHQgcmV2aXZlci5cbiAqIEBzZWUgaHR0cDovL2phc29uZm9ybWF0LmNvbS93dGYtaXMtanN4XG4gKlxuICogQ3JlYXRlcyBhIElTaW1wbGlmaWVkTm9kZSAodmlydHVhbCBlbnRpdHkpLiBBIHRyZWUgb2YgSVNpbXBsaWZpZWROb2RlIGNhbiBiZSB1c2VkIGFzIGEgbGlnaHR3ZWlnaHQgcmVwcmVzZW50YXRpb25cbiAqIG9mIHRoZSBzdHJ1Y3R1cmUgb2YgYSBlbnRpdHkgdHJlZS4gVGhpcyBzdHJ1Y3R1cmUgY2FuIGJlIHJlYWxpemVkIGJ5IHJlY3Vyc2l2ZWx5IGNvbXBhcmluZyBpdCBhZ2FpbnN0XG4gKiB0aGUgY3VycmVudCBfYWN0dWFsXyBlbnRpdHkgc3RydWN0dXJlLCBhbmQgYXBwbHlpbmcgb25seSB0aGUgZGlmZmVyZW5jZXMuXG4gKlxuICogYGNyZWF0ZUVsZW1lbnQoKWAgYWNjZXB0cyBhbiBlbGVtZW50IG5hbWUsIGEgbGlzdCBvZiBhdHRyaWJ1dGVzL3Byb3BzLFxuICogYW5kIG9wdGlvbmFsbHkgY2hpbGRyZW4gdG8gYXBwZW5kIHRvIHRoZSBlbGVtZW50LlxuICpcbiAqIEBleGFtcGxlIFRoZSBmb2xsb3dpbmcgZW50aXR5IHRyZWVcbiAqXG4gKiBgPGJveCBwb3NpdGlvbj17e3g6IDEsIHk6IDIsIHo6IDN9fSAvPmBcbiAqXG4gKiBjYW4gYmUgY29uc3RydWN0ZWQgdXNpbmcgdGhpcyBmdW5jdGlvbiBhczpcbiAqXG4gKiBgY3JlYXRlRWxlbWVudCgnYm94JywgeyBwb3NpdGlvbjoge3g6IDEsIHk6IDIsIHo6IDN9IH0pO2BcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbm9kZU5hbWVcdEFuIGVudGl0eSBuYW1lLiBFeDogYHNjZW5lYCwgYGJveGAsIGBnbHRmLW1vZGVsYCwgZXRjLlxuICogQHBhcmFtIHtPYmplY3R9IGF0dHJpYnV0ZXNcdEFueSBhdHRyaWJ1dGVzL3Byb3BzIHRvIHNldCBvbiB0aGUgY3JlYXRlZCBlbnRpdHkuXG4gKiBAcGFyYW0gcmVzdCBBZGRpdGlvbmFsIGFyZ3VtZW50cyBhcmUgdGFrZW4gdG8gYmUgY2hpbGRyZW4gdG8gYXBwZW5kLiBDYW4gYmUgaW5maW5pdGVseSBuZXN0ZWQgQXJyYXlzLlxuICpcbiAqIEBwdWJsaWNcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRWxlbWVudDxQPihcbiAgbm9kZTogQ29tcG9uZW50RmFjdG9yeTxQPixcbiAgcGFyYW1zOiBKU1guQmFzZUVudGl0eSAmIFAgfCBudWxsLFxuICAuLi5jaGlsZHJlbjogKENvbXBvbmVudENoaWxkIHwgQ29tcG9uZW50Q2hpbGRyZW4pW11cbik6IElTaW1wbGlmaWVkTm9kZVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnQ8SyBleHRlbmRzIGtleW9mIEpTWC5JbnRyaW5zaWNFbGVtZW50cz4oXG4gIG5vZGU6IEssXG4gIHBhcmFtczogSlNYLkludHJpbnNpY0VsZW1lbnRzW0tdLFxuICAuLi5jaGlsZHJlbjogKENvbXBvbmVudENoaWxkIHwgQ29tcG9uZW50Q2hpbGRyZW4pW11cbik6IElTaW1wbGlmaWVkTm9kZVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnQoXG4gIG5vZGU6IHN0cmluZyxcbiAgcGFyYW1zOiBSZWNvcmQ8c3RyaW5nLCBhbnk+IHwgbnVsbCxcbiAgLi4uY2hpbGRyZW46IChDb21wb25lbnRDaGlsZCB8IENvbXBvbmVudENoaWxkcmVuKVtdXG4pOiBJU2ltcGxpZmllZE5vZGVcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFbGVtZW50KG5vZGVOYW1lOiBzdHJpbmcgfCBGdW5jdGlvbiwgYXR0cmlidXRlczogYW55LCAuLi5yZXN0OiBhbnlbXSkge1xuICBsZXQgY2hpbGRyZW46IElTaW1wbGlmaWVkTm9kZVtdID0gW11cbiAgbGV0IGxhc3RTaW1wbGU6IGJvb2xlYW4gPSBmYWxzZVxuICBsZXQgY2hpbGRcbiAgbGV0IHNpbXBsZTogYm9vbGVhbiA9IGZhbHNlXG4gIGxldCBpXG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpzcGFjZS13aXRoaW4tcGFyZW5zXG4gIGZvciAoaSA9IGFyZ3VtZW50cy5sZW5ndGg7IGktLSA+IDI7ICkge1xuICAgIHN0YWNrLnB1c2goYXJndW1lbnRzW2ldKVxuICB9XG4gIGlmIChhdHRyaWJ1dGVzICYmIGF0dHJpYnV0ZXMuY2hpbGRyZW4gIT0gbnVsbCkge1xuICAgIGlmICghc3RhY2subGVuZ3RoKSBzdGFjay5wdXNoKGF0dHJpYnV0ZXMuY2hpbGRyZW4pXG4gICAgZGVsZXRlIGF0dHJpYnV0ZXMuY2hpbGRyZW5cbiAgfVxuICB3aGlsZSAoc3RhY2subGVuZ3RoKSB7XG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWNvbmRpdGlvbmFsLWFzc2lnbm1lbnRcbiAgICBpZiAoKGNoaWxkID0gc3RhY2sucG9wKCkpICYmIGNoaWxkLnBvcCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6c3BhY2Utd2l0aGluLXBhcmVuc1xuICAgICAgZm9yIChpID0gY2hpbGQubGVuZ3RoOyBpLS07ICkgc3RhY2sucHVzaChjaGlsZFtpXSlcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHR5cGVvZiBjaGlsZCA9PT0gJ2Jvb2xlYW4nKSBjaGlsZCA9IG51bGxcblxuICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWNvbmRpdGlvbmFsLWFzc2lnbm1lbnRcbiAgICAgIGlmICgoc2ltcGxlID0gdHlwZW9mIG5vZGVOYW1lICE9PSAnZnVuY3Rpb24nKSkge1xuICAgICAgICBpZiAoY2hpbGQgPT0gbnVsbCkgY2hpbGQgPSBudWxsXG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBjaGlsZCAhPT0gJ3N0cmluZycpIHNpbXBsZSA9IGZhbHNlXG4gICAgICB9XG5cbiAgICAgIGlmIChzaW1wbGUgJiYgbGFzdFNpbXBsZSkge1xuICAgICAgICBjaGlsZHJlbltjaGlsZHJlbi5sZW5ndGggLSAxXSArPSBjaGlsZFxuICAgICAgfSBlbHNlIGlmIChjaGlsZCkge1xuICAgICAgICBjaGlsZHJlbi5wdXNoKGNoaWxkKVxuICAgICAgfVxuXG4gICAgICBsYXN0U2ltcGxlID0gc2ltcGxlXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB0YWc6IG5vZGVOYW1lLFxuICAgIGF0dHJzOiBhdHRyaWJ1dGVzIHx8IHt9LFxuICAgIGNoaWxkcmVuOiBjaGlsZHJlbiB8fCBbXVxuICB9XG59XG4iXX0=